{
  "id": "5f106c1b-930e-453a-a720-321114885fa7",
  "prevId": "a46a6500-73f5-4b35-b504-7838ae2dfb13",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.campaigns": {
      "name": "campaigns",
      "schema": "",
      "columns": {
        "campaign_id": {
          "name": "campaign_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "campaign_code": {
          "name": "campaign_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "pack_code": {
          "name": "pack_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "campaign_name": {
          "name": "campaign_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"campaigns\".\"campaign_name\", '')), 'A')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_campaign_search": {
          "name": "idx_campaign_search",
          "columns": [
            {
              "expression": "full_text_search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaigns_pack_code_packs_pack_code_fk": {
          "name": "campaigns_pack_code_packs_pack_code_fk",
          "tableFrom": "campaigns",
          "tableTo": "packs",
          "columnsFrom": [
            "pack_code"
          ],
          "columnsTo": [
            "pack_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "campaigns_campaign_code_unique": {
          "name": "campaigns_campaign_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "campaign_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.packs": {
      "name": "packs",
      "schema": "",
      "columns": {
        "pack_id": {
          "name": "pack_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "pack_code": {
          "name": "pack_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "pack_name": {
          "name": "pack_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"packs\".\"pack_name\", '')), 'A')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_pack_search": {
          "name": "idx_pack_search",
          "columns": [
            {
              "expression": "full_text_search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "packs_pack_code_unique": {
          "name": "packs_pack_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "pack_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.scenarios": {
      "name": "scenarios",
      "schema": "",
      "columns": {
        "scenario_id": {
          "name": "scenario_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "scenario_code": {
          "name": "scenario_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "scenario_name": {
          "name": "scenario_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "scenario_prefix": {
          "name": "scenario_prefix",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "pack_code": {
          "name": "pack_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "campaign_code": {
          "name": "campaign_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"scenarios\".\"scenario_name\", '')), 'A')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_scenario_search": {
          "name": "idx_scenario_search",
          "columns": [
            {
              "expression": "full_text_search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "scenarios_pack_code_packs_pack_code_fk": {
          "name": "scenarios_pack_code_packs_pack_code_fk",
          "tableFrom": "scenarios",
          "tableTo": "packs",
          "columnsFrom": [
            "pack_code"
          ],
          "columnsTo": [
            "pack_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "scenarios_campaign_code_campaigns_campaign_code_fk": {
          "name": "scenarios_campaign_code_campaigns_campaign_code_fk",
          "tableFrom": "scenarios",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_code"
          ],
          "columnsTo": [
            "campaign_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "scenarios_scenario_code_unique": {
          "name": "scenarios_scenario_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "scenario_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.encounter_sets": {
      "name": "encounter_sets",
      "schema": "",
      "columns": {
        "encounter_id": {
          "name": "encounter_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "encounter_name": {
          "name": "encounter_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "encounter_code": {
          "name": "encounter_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "pack_code": {
          "name": "pack_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"encounter_sets\".\"encounter_name\", '')), 'A')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_encounter_set_search": {
          "name": "idx_encounter_set_search",
          "columns": [
            {
              "expression": "to_tsvector('english', \"encounter_name\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "encounter_sets_pack_code_packs_pack_code_fk": {
          "name": "encounter_sets_pack_code_packs_pack_code_fk",
          "tableFrom": "encounter_sets",
          "tableTo": "packs",
          "columnsFrom": [
            "pack_code"
          ],
          "columnsTo": [
            "pack_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "encounter_sets_encounter_code_unique": {
          "name": "encounter_sets_encounter_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "encounter_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.encounter_sets_to_scenarios": {
      "name": "encounter_sets_to_scenarios",
      "schema": "",
      "columns": {
        "encounter_code": {
          "name": "encounter_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "scenario_code": {
          "name": "scenario_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "encounter_sets_to_scenarios_encounter_code_encounter_sets_encounter_code_fk": {
          "name": "encounter_sets_to_scenarios_encounter_code_encounter_sets_encounter_code_fk",
          "tableFrom": "encounter_sets_to_scenarios",
          "tableTo": "encounter_sets",
          "columnsFrom": [
            "encounter_code"
          ],
          "columnsTo": [
            "encounter_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "encounter_sets_to_scenarios_scenario_code_scenarios_scenario_code_fk": {
          "name": "encounter_sets_to_scenarios_scenario_code_scenarios_scenario_code_fk",
          "tableFrom": "encounter_sets_to_scenarios",
          "tableTo": "scenarios",
          "columnsFrom": [
            "scenario_code"
          ],
          "columnsTo": [
            "scenario_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "encounter_sets_to_scenarios_encounter_code_scenario_code_pk": {
          "name": "encounter_sets_to_scenarios_encounter_code_scenario_code_pk",
          "columns": [
            "encounter_code",
            "scenario_code"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cards": {
      "name": "cards",
      "schema": "",
      "columns": {
        "card_id": {
          "name": "card_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "card_name": {
          "name": "card_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "real_name": {
          "name": "real_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "card_code": {
          "name": "card_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "type_code": {
          "name": "type_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "type_name": {
          "name": "type_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "faction_code": {
          "name": "faction_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "faction_name": {
          "name": "faction_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "encounter_position": {
          "name": "encounter_position",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "position": {
          "name": "position",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "back_text": {
          "name": "back_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "flavor": {
          "name": "flavor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "traits_text": {
          "name": "traits_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "imagesrc": {
          "name": "imagesrc",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "backimagesrc": {
          "name": "backimagesrc",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "back_flavor": {
          "name": "back_flavor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "raw_data": {
          "name": "raw_data",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        },
        "encounter_code": {
          "name": "encounter_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "pack_code": {
          "name": "pack_code",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "case when \"cards\".\"imagesrc\" is not null then 'https://arkhamdb.com' || \"cards\".\"imagesrc\" else null end",
            "type": "stored"
          }
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"cards\".\"card_name\", '')), 'A') || \n        setweight(to_tsvector('english', coalesce(\"cards\".\"real_name\", '')), 'A') ||\n        setweight(to_tsvector('english', coalesce(\"cards\".\"text\", '')), 'C') ||\n        setweight(to_tsvector('english', coalesce(\"cards\".\"back_text\", '')), 'C') ||\n        setweight(to_tsvector('english', coalesce(\"cards\".\"traits_text\", '')), 'B') ||\n        setweight(to_tsvector('english', coalesce(\"cards\".\"flavor\", '')), 'D') ||\n        setweight(to_tsvector('english', coalesce(\"cards\".\"back_flavor\", '')), 'D')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_card_search": {
          "name": "idx_card_search",
          "columns": [
            {
              "expression": "full_text_search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "cards_encounter_code_encounter_sets_encounter_code_fk": {
          "name": "cards_encounter_code_encounter_sets_encounter_code_fk",
          "tableFrom": "cards",
          "tableTo": "encounter_sets",
          "columnsFrom": [
            "encounter_code"
          ],
          "columnsTo": [
            "encounter_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "cards_pack_code_packs_pack_code_fk": {
          "name": "cards_pack_code_packs_pack_code_fk",
          "tableFrom": "cards",
          "tableTo": "packs",
          "columnsFrom": [
            "pack_code"
          ],
          "columnsTo": [
            "pack_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "cards_card_code_unique": {
          "name": "cards_card_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "card_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.traits": {
      "name": "traits",
      "schema": "",
      "columns": {
        "trait_id": {
          "name": "trait_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "trait_name": {
          "name": "trait_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "full_text_search": {
          "name": "full_text_search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(\n        setweight(to_tsvector('english', coalesce(\"traits\".\"trait_name\", '')), 'A')\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_trait_search": {
          "name": "idx_trait_search",
          "columns": [
            {
              "expression": "full_text_search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "traits_trait_name_unique": {
          "name": "traits_trait_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "trait_name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.traits_to_cards": {
      "name": "traits_to_cards",
      "schema": "",
      "columns": {
        "trait_name": {
          "name": "trait_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "card_code": {
          "name": "card_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "traits_to_cards_trait_name_traits_trait_name_fk": {
          "name": "traits_to_cards_trait_name_traits_trait_name_fk",
          "tableFrom": "traits_to_cards",
          "tableTo": "traits",
          "columnsFrom": [
            "trait_name"
          ],
          "columnsTo": [
            "trait_name"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "traits_to_cards_card_code_cards_card_code_fk": {
          "name": "traits_to_cards_card_code_cards_card_code_fk",
          "tableFrom": "traits_to_cards",
          "tableTo": "cards",
          "columnsFrom": [
            "card_code"
          ],
          "columnsTo": [
            "card_code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "traits_to_cards_trait_name_card_code_pk": {
          "name": "traits_to_cards_trait_name_card_code_pk",
          "columns": [
            "trait_name",
            "card_code"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.search_view": {
      "columns": {},
      "definition": "(((((select text 'card' as \"type\", \"card_id\" as \"id\", \"card_code\" as \"code\", \"card_name\" as \"name\", \"image_url\" as \"imageUrl\", \"full_text_search\" as \"full_text_search\" from \"cards\") union all (select distinct on (\"packs\".\"pack_id\") text 'pack' as \"type\", \"packs\".\"pack_id\", \"packs\".\"pack_code\", \"packs\".\"pack_name\", \"cards\".\"image_url\", \"packs\".\"full_text_search\" from \"packs\" left join \"cards\" on (\"packs\".\"pack_code\" = \"cards\".\"pack_code\" and \"cards\".\"type_code\" = 'scenario'))) union all (select distinct on (\"campaigns\".\"campaign_id\") text 'campaign' as \"type\", \"campaigns\".\"campaign_id\", \"campaigns\".\"campaign_code\", \"campaigns\".\"campaign_name\", \"cards\".\"image_url\", \"campaigns\".\"full_text_search\" from \"campaigns\" left join \"scenarios\" on \"campaigns\".\"campaign_code\" = \"scenarios\".\"campaign_code\" left join \"encounter_sets_to_scenarios\" on \"scenarios\".\"scenario_code\" = \"encounter_sets_to_scenarios\".\"scenario_code\" left join \"encounter_sets\" on \"encounter_sets_to_scenarios\".\"encounter_code\" = \"encounter_sets\".\"encounter_code\" left join \"cards\" on (\"encounter_sets\".\"encounter_code\" = \"cards\".\"encounter_code\" and \"cards\".\"type_code\" = 'scenario'))) union all (select distinct on (\"scenarios\".\"scenario_id\") text 'scenario' as \"type\", \"scenarios\".\"scenario_id\", \"scenarios\".\"scenario_code\", \"scenarios\".\"scenario_name\", \"cards\".\"image_url\", \"scenarios\".\"full_text_search\" from \"scenarios\" left join \"encounter_sets_to_scenarios\" on \"scenarios\".\"scenario_code\" = \"encounter_sets_to_scenarios\".\"scenario_code\" left join \"encounter_sets\" on \"encounter_sets_to_scenarios\".\"encounter_code\" = \"encounter_sets\".\"encounter_code\" left join \"cards\" on (\"encounter_sets\".\"encounter_code\" = \"cards\".\"encounter_code\" and \"cards\".\"type_code\" = 'scenario'))) union all (select distinct on (\"encounter_sets\".\"encounter_id\") text 'encounter' as \"type\", \"encounter_sets\".\"encounter_id\", \"encounter_sets\".\"encounter_code\", \"encounter_sets\".\"encounter_name\", \"cards\".\"image_url\", \"encounter_sets\".\"full_text_search\" from \"encounter_sets\" left join \"cards\" on \"encounter_sets\".\"encounter_code\" = \"cards\".\"encounter_code\")) union all (select distinct on (\"traits\".\"trait_name\") text 'trait' as \"type\", \"traits\".\"trait_id\", \"traits\".\"trait_name\", \"traits\".\"trait_name\", \"cards\".\"image_url\", \"traits\".\"full_text_search\" from \"traits\" left join \"traits_to_cards\" on \"traits\".\"trait_name\" = \"traits_to_cards\".\"trait_name\" left join \"cards\" on \"traits_to_cards\".\"card_code\" = \"cards\".\"card_code\" order by \"traits\".\"trait_name\" asc, \"cards\".\"card_code\" asc)",
      "name": "search_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}